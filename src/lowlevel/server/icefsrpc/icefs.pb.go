//
// @Author: Tan90degrees tangentninetydegrees@gmail.com
// @Date: 2023-03-30 04:19:29
// @LastEditors: Tan90degrees tangentninetydegrees@gmail.com
// @LastEditTime: 2023-03-30 04:22:39
// @FilePath: /icefs/protos/lowlevel/icefs.proto
// @Description:
//
// Copyright (C) 2023 Tan90degrees <tangentninetydegrees@gmail.com>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: icefs.proto

package icefsrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FuseCtx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid   uint32 `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Pid   int32  `protobuf:"zigzag32,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Umask uint32 `protobuf:"varint,4,opt,name=umask,proto3" json:"umask,omitempty"`
}

func (x *FuseCtx) Reset() {
	*x = FuseCtx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuseCtx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuseCtx) ProtoMessage() {}

func (x *FuseCtx) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuseCtx.ProtoReflect.Descriptor instead.
func (*FuseCtx) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{0}
}

func (x *FuseCtx) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FuseCtx) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *FuseCtx) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *FuseCtx) GetUmask() uint32 {
	if x != nil {
		return x.Umask
	}
	return 0
}

type FuseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unique uint64   `protobuf:"varint,1,opt,name=unique,proto3" json:"unique,omitempty"`
	Ctx    *FuseCtx `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
}

func (x *FuseReq) Reset() {
	*x = FuseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuseReq) ProtoMessage() {}

func (x *FuseReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuseReq.ProtoReflect.Descriptor instead.
func (*FuseReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{1}
}

func (x *FuseReq) GetUnique() uint64 {
	if x != nil {
		return x.Unique
	}
	return 0
}

func (x *FuseReq) GetCtx() *FuseCtx {
	if x != nil {
		return x.Ctx
	}
	return nil
}

type FuseFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags        int32  `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`
	Writepage    bool   `protobuf:"varint,2,opt,name=writepage,proto3" json:"writepage,omitempty"`
	DirectIo     bool   `protobuf:"varint,3,opt,name=direct_io,json=directIo,proto3" json:"direct_io,omitempty"`
	KeepCache    bool   `protobuf:"varint,4,opt,name=keep_cache,json=keepCache,proto3" json:"keep_cache,omitempty"`
	Flush        bool   `protobuf:"varint,5,opt,name=flush,proto3" json:"flush,omitempty"`
	Nonseekable  bool   `protobuf:"varint,6,opt,name=nonseekable,proto3" json:"nonseekable,omitempty"`
	FlockRelease bool   `protobuf:"varint,7,opt,name=flock_release,json=flockRelease,proto3" json:"flock_release,omitempty"`
	CacheReaddir bool   `protobuf:"varint,8,opt,name=cache_readdir,json=cacheReaddir,proto3" json:"cache_readdir,omitempty"`
	Noflush      bool   `protobuf:"varint,9,opt,name=noflush,proto3" json:"noflush,omitempty"`
	Fh           uint64 `protobuf:"varint,10,opt,name=fh,proto3" json:"fh,omitempty"`
	LockOwner    uint64 `protobuf:"varint,11,opt,name=lock_owner,json=lockOwner,proto3" json:"lock_owner,omitempty"`
	PollEvents   uint32 `protobuf:"varint,12,opt,name=poll_events,json=pollEvents,proto3" json:"poll_events,omitempty"`
}

func (x *FuseFileInfo) Reset() {
	*x = FuseFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuseFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuseFileInfo) ProtoMessage() {}

func (x *FuseFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuseFileInfo.ProtoReflect.Descriptor instead.
func (*FuseFileInfo) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{2}
}

func (x *FuseFileInfo) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *FuseFileInfo) GetWritepage() bool {
	if x != nil {
		return x.Writepage
	}
	return false
}

func (x *FuseFileInfo) GetDirectIo() bool {
	if x != nil {
		return x.DirectIo
	}
	return false
}

func (x *FuseFileInfo) GetKeepCache() bool {
	if x != nil {
		return x.KeepCache
	}
	return false
}

func (x *FuseFileInfo) GetFlush() bool {
	if x != nil {
		return x.Flush
	}
	return false
}

func (x *FuseFileInfo) GetNonseekable() bool {
	if x != nil {
		return x.Nonseekable
	}
	return false
}

func (x *FuseFileInfo) GetFlockRelease() bool {
	if x != nil {
		return x.FlockRelease
	}
	return false
}

func (x *FuseFileInfo) GetCacheReaddir() bool {
	if x != nil {
		return x.CacheReaddir
	}
	return false
}

func (x *FuseFileInfo) GetNoflush() bool {
	if x != nil {
		return x.Noflush
	}
	return false
}

func (x *FuseFileInfo) GetFh() uint64 {
	if x != nil {
		return x.Fh
	}
	return 0
}

func (x *FuseFileInfo) GetLockOwner() uint64 {
	if x != nil {
		return x.LockOwner
	}
	return 0
}

func (x *FuseFileInfo) GetPollEvents() uint32 {
	if x != nil {
		return x.PollEvents
	}
	return 0
}

type FlockStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockType   int32 `protobuf:"varint,1,opt,name=lock_type,json=lockType,proto3" json:"lock_type,omitempty"`
	LockWhence int32 `protobuf:"varint,2,opt,name=lock_whence,json=lockWhence,proto3" json:"lock_whence,omitempty"`
	LockStart  int64 `protobuf:"varint,3,opt,name=lock_start,json=lockStart,proto3" json:"lock_start,omitempty"`
	LockLen    int64 `protobuf:"varint,4,opt,name=lock_len,json=lockLen,proto3" json:"lock_len,omitempty"`
	LockPid    int32 `protobuf:"varint,5,opt,name=lock_pid,json=lockPid,proto3" json:"lock_pid,omitempty"`
}

func (x *FlockStruct) Reset() {
	*x = FlockStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlockStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlockStruct) ProtoMessage() {}

func (x *FlockStruct) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlockStruct.ProtoReflect.Descriptor instead.
func (*FlockStruct) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{3}
}

func (x *FlockStruct) GetLockType() int32 {
	if x != nil {
		return x.LockType
	}
	return 0
}

func (x *FlockStruct) GetLockWhence() int32 {
	if x != nil {
		return x.LockWhence
	}
	return 0
}

func (x *FlockStruct) GetLockStart() int64 {
	if x != nil {
		return x.LockStart
	}
	return 0
}

func (x *FlockStruct) GetLockLen() int64 {
	if x != nil {
		return x.LockLen
	}
	return 0
}

func (x *FlockStruct) GetLockPid() int32 {
	if x != nil {
		return x.LockPid
	}
	return 0
}

type TimeStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeSec  int64 `protobuf:"varint,1,opt,name=time_sec,json=timeSec,proto3" json:"time_sec,omitempty"`
	TimeNSec int64 `protobuf:"varint,2,opt,name=time_n_sec,json=timeNSec,proto3" json:"time_n_sec,omitempty"`
}

func (x *TimeStruct) Reset() {
	*x = TimeStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeStruct) ProtoMessage() {}

func (x *TimeStruct) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeStruct.ProtoReflect.Descriptor instead.
func (*TimeStruct) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{4}
}

func (x *TimeStruct) GetTimeSec() int64 {
	if x != nil {
		return x.TimeSec
	}
	return 0
}

func (x *TimeStruct) GetTimeNSec() int64 {
	if x != nil {
		return x.TimeNSec
	}
	return 0
}

type StatStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StDev     uint64      `protobuf:"varint,1,opt,name=st_dev,json=stDev,proto3" json:"st_dev,omitempty"`
	StIno     uint64      `protobuf:"varint,2,opt,name=st_ino,json=stIno,proto3" json:"st_ino,omitempty"`
	StMode    uint32      `protobuf:"varint,3,opt,name=st_mode,json=stMode,proto3" json:"st_mode,omitempty"`
	StNlink   uint64      `protobuf:"varint,4,opt,name=st_nlink,json=stNlink,proto3" json:"st_nlink,omitempty"`
	StUid     uint32      `protobuf:"varint,5,opt,name=st_uid,json=stUid,proto3" json:"st_uid,omitempty"`
	StGid     uint32      `protobuf:"varint,6,opt,name=st_gid,json=stGid,proto3" json:"st_gid,omitempty"`
	StRdev    uint64      `protobuf:"varint,7,opt,name=st_rdev,json=stRdev,proto3" json:"st_rdev,omitempty"`
	StSize    int64       `protobuf:"varint,8,opt,name=st_size,json=stSize,proto3" json:"st_size,omitempty"`
	StAtim    *TimeStruct `protobuf:"bytes,9,opt,name=st_atim,json=stAtim,proto3" json:"st_atim,omitempty"`
	StMtim    *TimeStruct `protobuf:"bytes,10,opt,name=st_mtim,json=stMtim,proto3" json:"st_mtim,omitempty"`
	StCtim    *TimeStruct `protobuf:"bytes,11,opt,name=st_ctim,json=stCtim,proto3" json:"st_ctim,omitempty"`
	StBlksize int64       `protobuf:"varint,12,opt,name=st_blksize,json=stBlksize,proto3" json:"st_blksize,omitempty"`
	StBlocks  int64       `protobuf:"varint,13,opt,name=st_blocks,json=stBlocks,proto3" json:"st_blocks,omitempty"`
}

func (x *StatStruct) Reset() {
	*x = StatStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatStruct) ProtoMessage() {}

func (x *StatStruct) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatStruct.ProtoReflect.Descriptor instead.
func (*StatStruct) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{5}
}

func (x *StatStruct) GetStDev() uint64 {
	if x != nil {
		return x.StDev
	}
	return 0
}

func (x *StatStruct) GetStIno() uint64 {
	if x != nil {
		return x.StIno
	}
	return 0
}

func (x *StatStruct) GetStMode() uint32 {
	if x != nil {
		return x.StMode
	}
	return 0
}

func (x *StatStruct) GetStNlink() uint64 {
	if x != nil {
		return x.StNlink
	}
	return 0
}

func (x *StatStruct) GetStUid() uint32 {
	if x != nil {
		return x.StUid
	}
	return 0
}

func (x *StatStruct) GetStGid() uint32 {
	if x != nil {
		return x.StGid
	}
	return 0
}

func (x *StatStruct) GetStRdev() uint64 {
	if x != nil {
		return x.StRdev
	}
	return 0
}

func (x *StatStruct) GetStSize() int64 {
	if x != nil {
		return x.StSize
	}
	return 0
}

func (x *StatStruct) GetStAtim() *TimeStruct {
	if x != nil {
		return x.StAtim
	}
	return nil
}

func (x *StatStruct) GetStMtim() *TimeStruct {
	if x != nil {
		return x.StMtim
	}
	return nil
}

func (x *StatStruct) GetStCtim() *TimeStruct {
	if x != nil {
		return x.StCtim
	}
	return nil
}

func (x *StatStruct) GetStBlksize() int64 {
	if x != nil {
		return x.StBlksize
	}
	return 0
}

func (x *StatStruct) GetStBlocks() int64 {
	if x != nil {
		return x.StBlocks
	}
	return 0
}

type FuseEntryParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inode        uint64      `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`
	Generation   uint64      `protobuf:"varint,2,opt,name=generation,proto3" json:"generation,omitempty"`
	Attr         *StatStruct `protobuf:"bytes,3,opt,name=attr,proto3" json:"attr,omitempty"`
	AttrTimeout  float64     `protobuf:"fixed64,4,opt,name=attr_timeout,json=attrTimeout,proto3" json:"attr_timeout,omitempty"`
	EntryTimeout float64     `protobuf:"fixed64,5,opt,name=entry_timeout,json=entryTimeout,proto3" json:"entry_timeout,omitempty"`
}

func (x *FuseEntryParam) Reset() {
	*x = FuseEntryParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuseEntryParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuseEntryParam) ProtoMessage() {}

func (x *FuseEntryParam) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuseEntryParam.ProtoReflect.Descriptor instead.
func (*FuseEntryParam) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{6}
}

func (x *FuseEntryParam) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *FuseEntryParam) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *FuseEntryParam) GetAttr() *StatStruct {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *FuseEntryParam) GetAttrTimeout() float64 {
	if x != nil {
		return x.AttrTimeout
	}
	return 0
}

func (x *FuseEntryParam) GetEntryTimeout() float64 {
	if x != nil {
		return x.EntryTimeout
	}
	return 0
}

type DirentStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ino    uint64 `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
	Off    int64  `protobuf:"varint,2,opt,name=off,proto3" json:"off,omitempty"`
	Reclen uint32 `protobuf:"varint,3,opt,name=reclen,proto3" json:"reclen,omitempty"`
	Type   uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Name   string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DirentStruct) Reset() {
	*x = DirentStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirentStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirentStruct) ProtoMessage() {}

func (x *DirentStruct) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirentStruct.ProtoReflect.Descriptor instead.
func (*DirentStruct) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{7}
}

func (x *DirentStruct) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *DirentStruct) GetOff() int64 {
	if x != nil {
		return x.Off
	}
	return 0
}

func (x *DirentStruct) GetReclen() uint32 {
	if x != nil {
		return x.Reclen
	}
	return 0
}

func (x *DirentStruct) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DirentStruct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StatvfsStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FBsize   uint64 `protobuf:"varint,1,opt,name=f_bsize,json=fBsize,proto3" json:"f_bsize,omitempty"`
	FFrsize  uint64 `protobuf:"varint,2,opt,name=f_frsize,json=fFrsize,proto3" json:"f_frsize,omitempty"`
	FBlocks  uint64 `protobuf:"varint,3,opt,name=f_blocks,json=fBlocks,proto3" json:"f_blocks,omitempty"`
	FBfree   uint64 `protobuf:"varint,4,opt,name=f_bfree,json=fBfree,proto3" json:"f_bfree,omitempty"`
	FBavail  uint64 `protobuf:"varint,5,opt,name=f_bavail,json=fBavail,proto3" json:"f_bavail,omitempty"`
	FFiles   uint64 `protobuf:"varint,6,opt,name=f_files,json=fFiles,proto3" json:"f_files,omitempty"`
	FFfree   uint64 `protobuf:"varint,7,opt,name=f_ffree,json=fFfree,proto3" json:"f_ffree,omitempty"`
	FFavail  uint64 `protobuf:"varint,8,opt,name=f_favail,json=fFavail,proto3" json:"f_favail,omitempty"`
	FFsid    uint64 `protobuf:"varint,9,opt,name=f_fsid,json=fFsid,proto3" json:"f_fsid,omitempty"`
	Unused   int32  `protobuf:"varint,10,opt,name=unused,proto3" json:"unused,omitempty"`
	FFlag    uint64 `protobuf:"varint,11,opt,name=f_flag,json=fFlag,proto3" json:"f_flag,omitempty"`
	FNamemax uint64 `protobuf:"varint,12,opt,name=f_namemax,json=fNamemax,proto3" json:"f_namemax,omitempty"`
}

func (x *StatvfsStruct) Reset() {
	*x = StatvfsStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatvfsStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatvfsStruct) ProtoMessage() {}

func (x *StatvfsStruct) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatvfsStruct.ProtoReflect.Descriptor instead.
func (*StatvfsStruct) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{8}
}

func (x *StatvfsStruct) GetFBsize() uint64 {
	if x != nil {
		return x.FBsize
	}
	return 0
}

func (x *StatvfsStruct) GetFFrsize() uint64 {
	if x != nil {
		return x.FFrsize
	}
	return 0
}

func (x *StatvfsStruct) GetFBlocks() uint64 {
	if x != nil {
		return x.FBlocks
	}
	return 0
}

func (x *StatvfsStruct) GetFBfree() uint64 {
	if x != nil {
		return x.FBfree
	}
	return 0
}

func (x *StatvfsStruct) GetFBavail() uint64 {
	if x != nil {
		return x.FBavail
	}
	return 0
}

func (x *StatvfsStruct) GetFFiles() uint64 {
	if x != nil {
		return x.FFiles
	}
	return 0
}

func (x *StatvfsStruct) GetFFfree() uint64 {
	if x != nil {
		return x.FFfree
	}
	return 0
}

func (x *StatvfsStruct) GetFFavail() uint64 {
	if x != nil {
		return x.FFavail
	}
	return 0
}

func (x *StatvfsStruct) GetFFsid() uint64 {
	if x != nil {
		return x.FFsid
	}
	return 0
}

func (x *StatvfsStruct) GetUnused() int32 {
	if x != nil {
		return x.Unused
	}
	return 0
}

func (x *StatvfsStruct) GetFFlag() uint64 {
	if x != nil {
		return x.FFlag
	}
	return 0
}

func (x *StatvfsStruct) GetFNamemax() uint64 {
	if x != nil {
		return x.FNamemax
	}
	return 0
}

type IoVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size uint64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IoVector) Reset() {
	*x = IoVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IoVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IoVector) ProtoMessage() {}

func (x *IoVector) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IoVector.ProtoReflect.Descriptor instead.
func (*IoVector) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{9}
}

func (x *IoVector) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IoVector) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Request
type IcefsAccessReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req   *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode uint64   `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Mask  int32    `protobuf:"varint,3,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *IcefsAccessReq) Reset() {
	*x = IcefsAccessReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsAccessReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsAccessReq) ProtoMessage() {}

func (x *IcefsAccessReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsAccessReq.ProtoReflect.Descriptor instead.
func (*IcefsAccessReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{10}
}

func (x *IcefsAccessReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsAccessReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsAccessReq) GetMask() int32 {
	if x != nil {
		return x.Mask
	}
	return 0
}

type IcefsBmapReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64   `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	BlockIze uint64   `protobuf:"varint,3,opt,name=block_ize,json=blockIze,proto3" json:"block_ize,omitempty"`
	Index    uint64   `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *IcefsBmapReq) Reset() {
	*x = IcefsBmapReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsBmapReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsBmapReq) ProtoMessage() {}

func (x *IcefsBmapReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsBmapReq.ProtoReflect.Descriptor instead.
func (*IcefsBmapReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{11}
}

func (x *IcefsBmapReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsBmapReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsBmapReq) GetBlockIze() uint64 {
	if x != nil {
		return x.BlockIze
	}
	return 0
}

func (x *IcefsBmapReq) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type IcefsCopyFileRangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req         *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	InodeIn     uint64        `protobuf:"varint,2,opt,name=inode_in,json=inodeIn,proto3" json:"inode_in,omitempty"`
	OffsetIn    int64         `protobuf:"varint,3,opt,name=offset_in,json=offsetIn,proto3" json:"offset_in,omitempty"`
	FileInfoIn  *FuseFileInfo `protobuf:"bytes,4,opt,name=file_info_in,json=fileInfoIn,proto3" json:"file_info_in,omitempty"`
	InodeOut    uint64        `protobuf:"varint,5,opt,name=inode_out,json=inodeOut,proto3" json:"inode_out,omitempty"`
	OffsetOut   int64         `protobuf:"varint,6,opt,name=offset_out,json=offsetOut,proto3" json:"offset_out,omitempty"`
	FileInfoOut *FuseFileInfo `protobuf:"bytes,7,opt,name=file_info_out,json=fileInfoOut,proto3" json:"file_info_out,omitempty"`
	Len         uint64        `protobuf:"varint,8,opt,name=len,proto3" json:"len,omitempty"`
	Flags       int32         `protobuf:"varint,9,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *IcefsCopyFileRangeReq) Reset() {
	*x = IcefsCopyFileRangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsCopyFileRangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsCopyFileRangeReq) ProtoMessage() {}

func (x *IcefsCopyFileRangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsCopyFileRangeReq.ProtoReflect.Descriptor instead.
func (*IcefsCopyFileRangeReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{12}
}

func (x *IcefsCopyFileRangeReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsCopyFileRangeReq) GetInodeIn() uint64 {
	if x != nil {
		return x.InodeIn
	}
	return 0
}

func (x *IcefsCopyFileRangeReq) GetOffsetIn() int64 {
	if x != nil {
		return x.OffsetIn
	}
	return 0
}

func (x *IcefsCopyFileRangeReq) GetFileInfoIn() *FuseFileInfo {
	if x != nil {
		return x.FileInfoIn
	}
	return nil
}

func (x *IcefsCopyFileRangeReq) GetInodeOut() uint64 {
	if x != nil {
		return x.InodeOut
	}
	return 0
}

func (x *IcefsCopyFileRangeReq) GetOffsetOut() int64 {
	if x != nil {
		return x.OffsetOut
	}
	return 0
}

func (x *IcefsCopyFileRangeReq) GetFileInfoOut() *FuseFileInfo {
	if x != nil {
		return x.FileInfoOut
	}
	return nil
}

func (x *IcefsCopyFileRangeReq) GetLen() uint64 {
	if x != nil {
		return x.Len
	}
	return 0
}

func (x *IcefsCopyFileRangeReq) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type IcefsCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req         *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	ParentInode uint64        `protobuf:"varint,2,opt,name=parent_inode,json=parentInode,proto3" json:"parent_inode,omitempty"`
	Name        string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Mode        uint32        `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty"`
	FileInfo    *FuseFileInfo `protobuf:"bytes,5,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsCreateReq) Reset() {
	*x = IcefsCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsCreateReq) ProtoMessage() {}

func (x *IcefsCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsCreateReq.ProtoReflect.Descriptor instead.
func (*IcefsCreateReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{13}
}

func (x *IcefsCreateReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsCreateReq) GetParentInode() uint64 {
	if x != nil {
		return x.ParentInode
	}
	return 0
}

func (x *IcefsCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IcefsCreateReq) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *IcefsCreateReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsDestroyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostName string `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Info     string `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *IcefsDestroyReq) Reset() {
	*x = IcefsDestroyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsDestroyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsDestroyReq) ProtoMessage() {}

func (x *IcefsDestroyReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsDestroyReq.ProtoReflect.Descriptor instead.
func (*IcefsDestroyReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{14}
}

func (x *IcefsDestroyReq) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *IcefsDestroyReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type IcefsFallocateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Mode     int32         `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	Offset   int64         `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Length   int64         `protobuf:"varint,5,opt,name=length,proto3" json:"length,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,6,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsFallocateReq) Reset() {
	*x = IcefsFallocateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsFallocateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsFallocateReq) ProtoMessage() {}

func (x *IcefsFallocateReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsFallocateReq.ProtoReflect.Descriptor instead.
func (*IcefsFallocateReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{15}
}

func (x *IcefsFallocateReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsFallocateReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsFallocateReq) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *IcefsFallocateReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *IcefsFallocateReq) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *IcefsFallocateReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsFlockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,3,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	Op       int32         `protobuf:"varint,4,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *IcefsFlockReq) Reset() {
	*x = IcefsFlockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsFlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsFlockReq) ProtoMessage() {}

func (x *IcefsFlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsFlockReq.ProtoReflect.Descriptor instead.
func (*IcefsFlockReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{16}
}

func (x *IcefsFlockReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsFlockReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsFlockReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *IcefsFlockReq) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

type IcefsFlushReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,3,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsFlushReq) Reset() {
	*x = IcefsFlushReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsFlushReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsFlushReq) ProtoMessage() {}

func (x *IcefsFlushReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsFlushReq.ProtoReflect.Descriptor instead.
func (*IcefsFlushReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{17}
}

func (x *IcefsFlushReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsFlushReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsFlushReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsForgetMultiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq                         `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Count    uint64                           `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	ToForget []*IcefsForgetMultiReqForgetData `protobuf:"bytes,3,rep,name=to_forget,json=toForget,proto3" json:"to_forget,omitempty"`
}

func (x *IcefsForgetMultiReq) Reset() {
	*x = IcefsForgetMultiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsForgetMultiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsForgetMultiReq) ProtoMessage() {}

func (x *IcefsForgetMultiReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsForgetMultiReq.ProtoReflect.Descriptor instead.
func (*IcefsForgetMultiReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{18}
}

func (x *IcefsForgetMultiReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsForgetMultiReq) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *IcefsForgetMultiReq) GetToForget() []*IcefsForgetMultiReqForgetData {
	if x != nil {
		return x.ToForget
	}
	return nil
}

type IcefsForgetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req     *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode   uint64   `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Nlookup uint64   `protobuf:"varint,3,opt,name=nlookup,proto3" json:"nlookup,omitempty"`
}

func (x *IcefsForgetReq) Reset() {
	*x = IcefsForgetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsForgetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsForgetReq) ProtoMessage() {}

func (x *IcefsForgetReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsForgetReq.ProtoReflect.Descriptor instead.
func (*IcefsForgetReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{19}
}

func (x *IcefsForgetReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsForgetReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsForgetReq) GetNlookup() uint64 {
	if x != nil {
		return x.Nlookup
	}
	return 0
}

type IcefsFsyncReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	DataSync int32         `protobuf:"varint,3,opt,name=data_sync,json=dataSync,proto3" json:"data_sync,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,4,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsFsyncReq) Reset() {
	*x = IcefsFsyncReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsFsyncReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsFsyncReq) ProtoMessage() {}

func (x *IcefsFsyncReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsFsyncReq.ProtoReflect.Descriptor instead.
func (*IcefsFsyncReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{20}
}

func (x *IcefsFsyncReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsFsyncReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsFsyncReq) GetDataSync() int32 {
	if x != nil {
		return x.DataSync
	}
	return 0
}

func (x *IcefsFsyncReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsFsyncDirReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	DataSync int32         `protobuf:"varint,3,opt,name=data_sync,json=dataSync,proto3" json:"data_sync,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,4,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsFsyncDirReq) Reset() {
	*x = IcefsFsyncDirReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsFsyncDirReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsFsyncDirReq) ProtoMessage() {}

func (x *IcefsFsyncDirReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsFsyncDirReq.ProtoReflect.Descriptor instead.
func (*IcefsFsyncDirReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{21}
}

func (x *IcefsFsyncDirReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsFsyncDirReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsFsyncDirReq) GetDataSync() int32 {
	if x != nil {
		return x.DataSync
	}
	return 0
}

func (x *IcefsFsyncDirReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsGetAttrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,4,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsGetAttrReq) Reset() {
	*x = IcefsGetAttrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsGetAttrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsGetAttrReq) ProtoMessage() {}

func (x *IcefsGetAttrReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsGetAttrReq.ProtoReflect.Descriptor instead.
func (*IcefsGetAttrReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{22}
}

func (x *IcefsGetAttrReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsGetAttrReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsGetAttrReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsGetLkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,3,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	Lock     *FlockStruct  `protobuf:"bytes,4,opt,name=lock,proto3" json:"lock,omitempty"`
}

func (x *IcefsGetLkReq) Reset() {
	*x = IcefsGetLkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsGetLkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsGetLkReq) ProtoMessage() {}

func (x *IcefsGetLkReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsGetLkReq.ProtoReflect.Descriptor instead.
func (*IcefsGetLkReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{23}
}

func (x *IcefsGetLkReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsGetLkReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsGetLkReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *IcefsGetLkReq) GetLock() *FlockStruct {
	if x != nil {
		return x.Lock
	}
	return nil
}

type IcefsGetXattrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req   *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode uint64   `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Name  string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Size  uint64   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *IcefsGetXattrReq) Reset() {
	*x = IcefsGetXattrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsGetXattrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsGetXattrReq) ProtoMessage() {}

func (x *IcefsGetXattrReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsGetXattrReq.ProtoReflect.Descriptor instead.
func (*IcefsGetXattrReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{24}
}

func (x *IcefsGetXattrReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsGetXattrReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsGetXattrReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IcefsGetXattrReq) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type IcefsInitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string  `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Info    string  `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Want    uint32  `protobuf:"varint,3,opt,name=want,proto3" json:"want,omitempty"`
	Timeout float64 `protobuf:"fixed64,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *IcefsInitReq) Reset() {
	*x = IcefsInitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsInitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsInitReq) ProtoMessage() {}

func (x *IcefsInitReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsInitReq.ProtoReflect.Descriptor instead.
func (*IcefsInitReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{25}
}

func (x *IcefsInitReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *IcefsInitReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *IcefsInitReq) GetWant() uint32 {
	if x != nil {
		return x.Want
	}
	return 0
}

func (x *IcefsInitReq) GetTimeout() float64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type IcefsIoctlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req        *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode      uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Cmd        uint32        `protobuf:"varint,3,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Arg        []byte        `protobuf:"bytes,4,opt,name=arg,proto3" json:"arg,omitempty"`
	FileInfo   *FuseFileInfo `protobuf:"bytes,5,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	Flags      uint32        `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	InBufSize  uint64        `protobuf:"varint,7,opt,name=in_buf_size,json=inBufSize,proto3" json:"in_buf_size,omitempty"`
	OutBufSize uint64        `protobuf:"varint,8,opt,name=out_buf_size,json=outBufSize,proto3" json:"out_buf_size,omitempty"`
}

func (x *IcefsIoctlReq) Reset() {
	*x = IcefsIoctlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsIoctlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsIoctlReq) ProtoMessage() {}

func (x *IcefsIoctlReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsIoctlReq.ProtoReflect.Descriptor instead.
func (*IcefsIoctlReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{26}
}

func (x *IcefsIoctlReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsIoctlReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsIoctlReq) GetCmd() uint32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *IcefsIoctlReq) GetArg() []byte {
	if x != nil {
		return x.Arg
	}
	return nil
}

func (x *IcefsIoctlReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *IcefsIoctlReq) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *IcefsIoctlReq) GetInBufSize() uint64 {
	if x != nil {
		return x.InBufSize
	}
	return 0
}

func (x *IcefsIoctlReq) GetOutBufSize() uint64 {
	if x != nil {
		return x.OutBufSize
	}
	return 0
}

type IcefsLinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req            *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode          uint64   `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	NewParentInode uint64   `protobuf:"varint,3,opt,name=new_parent_inode,json=newParentInode,proto3" json:"new_parent_inode,omitempty"`
	NewName        string   `protobuf:"bytes,4,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
}

func (x *IcefsLinkReq) Reset() {
	*x = IcefsLinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsLinkReq) ProtoMessage() {}

func (x *IcefsLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsLinkReq.ProtoReflect.Descriptor instead.
func (*IcefsLinkReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{27}
}

func (x *IcefsLinkReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsLinkReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsLinkReq) GetNewParentInode() uint64 {
	if x != nil {
		return x.NewParentInode
	}
	return 0
}

func (x *IcefsLinkReq) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type IcefsListXattrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req   *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode uint64   `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Size  uint64   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *IcefsListXattrReq) Reset() {
	*x = IcefsListXattrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsListXattrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsListXattrReq) ProtoMessage() {}

func (x *IcefsListXattrReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsListXattrReq.ProtoReflect.Descriptor instead.
func (*IcefsListXattrReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{28}
}

func (x *IcefsListXattrReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsListXattrReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsListXattrReq) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type IcefsLookUpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req         *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	ParentInode uint64   `protobuf:"varint,2,opt,name=parent_inode,json=parentInode,proto3" json:"parent_inode,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IcefsLookUpReq) Reset() {
	*x = IcefsLookUpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsLookUpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsLookUpReq) ProtoMessage() {}

func (x *IcefsLookUpReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsLookUpReq.ProtoReflect.Descriptor instead.
func (*IcefsLookUpReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{29}
}

func (x *IcefsLookUpReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsLookUpReq) GetParentInode() uint64 {
	if x != nil {
		return x.ParentInode
	}
	return 0
}

func (x *IcefsLookUpReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IcefsLseekReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Offset   int64         `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Whence   int32         `protobuf:"varint,4,opt,name=whence,proto3" json:"whence,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,5,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsLseekReq) Reset() {
	*x = IcefsLseekReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsLseekReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsLseekReq) ProtoMessage() {}

func (x *IcefsLseekReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsLseekReq.ProtoReflect.Descriptor instead.
func (*IcefsLseekReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{30}
}

func (x *IcefsLseekReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsLseekReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsLseekReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *IcefsLseekReq) GetWhence() int32 {
	if x != nil {
		return x.Whence
	}
	return 0
}

func (x *IcefsLseekReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsMkDirReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req         *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	ParentInode uint64   `protobuf:"varint,2,opt,name=parent_inode,json=parentInode,proto3" json:"parent_inode,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Mode        uint32   `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *IcefsMkDirReq) Reset() {
	*x = IcefsMkDirReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsMkDirReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsMkDirReq) ProtoMessage() {}

func (x *IcefsMkDirReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsMkDirReq.ProtoReflect.Descriptor instead.
func (*IcefsMkDirReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{31}
}

func (x *IcefsMkDirReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsMkDirReq) GetParentInode() uint64 {
	if x != nil {
		return x.ParentInode
	}
	return 0
}

func (x *IcefsMkDirReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IcefsMkDirReq) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type IcefsMknodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req         *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	ParentInode uint64   `protobuf:"varint,2,opt,name=parent_inode,json=parentInode,proto3" json:"parent_inode,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Mode        uint32   `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty"`
	Rdev        uint64   `protobuf:"varint,5,opt,name=rdev,proto3" json:"rdev,omitempty"`
}

func (x *IcefsMknodReq) Reset() {
	*x = IcefsMknodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsMknodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsMknodReq) ProtoMessage() {}

func (x *IcefsMknodReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsMknodReq.ProtoReflect.Descriptor instead.
func (*IcefsMknodReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{32}
}

func (x *IcefsMknodReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsMknodReq) GetParentInode() uint64 {
	if x != nil {
		return x.ParentInode
	}
	return 0
}

func (x *IcefsMknodReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IcefsMknodReq) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *IcefsMknodReq) GetRdev() uint64 {
	if x != nil {
		return x.Rdev
	}
	return 0
}

type IcefsOpenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,3,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsOpenReq) Reset() {
	*x = IcefsOpenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsOpenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsOpenReq) ProtoMessage() {}

func (x *IcefsOpenReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsOpenReq.ProtoReflect.Descriptor instead.
func (*IcefsOpenReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{33}
}

func (x *IcefsOpenReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsOpenReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsOpenReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsOpenDirReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,3,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsOpenDirReq) Reset() {
	*x = IcefsOpenDirReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsOpenDirReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsOpenDirReq) ProtoMessage() {}

func (x *IcefsOpenDirReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsOpenDirReq.ProtoReflect.Descriptor instead.
func (*IcefsOpenDirReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{34}
}

func (x *IcefsOpenDirReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsOpenDirReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsOpenDirReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsPollReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,3,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsPollReq) Reset() {
	*x = IcefsPollReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsPollReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsPollReq) ProtoMessage() {}

func (x *IcefsPollReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsPollReq.ProtoReflect.Descriptor instead.
func (*IcefsPollReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{35}
}

func (x *IcefsPollReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsPollReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsPollReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Size     uint64        `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Offset   int64         `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,5,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsReadReq) Reset() {
	*x = IcefsReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsReadReq) ProtoMessage() {}

func (x *IcefsReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsReadReq.ProtoReflect.Descriptor instead.
func (*IcefsReadReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{36}
}

func (x *IcefsReadReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsReadReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsReadReq) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IcefsReadReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *IcefsReadReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsReadDirReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Size     uint64        `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Offset   int64         `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,5,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsReadDirReq) Reset() {
	*x = IcefsReadDirReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsReadDirReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsReadDirReq) ProtoMessage() {}

func (x *IcefsReadDirReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsReadDirReq.ProtoReflect.Descriptor instead.
func (*IcefsReadDirReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{37}
}

func (x *IcefsReadDirReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsReadDirReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsReadDirReq) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IcefsReadDirReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *IcefsReadDirReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsReadDirPlusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Size     uint64        `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Offset   int64         `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,5,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsReadDirPlusReq) Reset() {
	*x = IcefsReadDirPlusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsReadDirPlusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsReadDirPlusReq) ProtoMessage() {}

func (x *IcefsReadDirPlusReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsReadDirPlusReq.ProtoReflect.Descriptor instead.
func (*IcefsReadDirPlusReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{38}
}

func (x *IcefsReadDirPlusReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsReadDirPlusReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsReadDirPlusReq) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IcefsReadDirPlusReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *IcefsReadDirPlusReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsReadLinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req   *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode uint64   `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
}

func (x *IcefsReadLinkReq) Reset() {
	*x = IcefsReadLinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsReadLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsReadLinkReq) ProtoMessage() {}

func (x *IcefsReadLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsReadLinkReq.ProtoReflect.Descriptor instead.
func (*IcefsReadLinkReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{39}
}

func (x *IcefsReadLinkReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsReadLinkReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

type IcefsReleaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,3,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsReleaseReq) Reset() {
	*x = IcefsReleaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsReleaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsReleaseReq) ProtoMessage() {}

func (x *IcefsReleaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsReleaseReq.ProtoReflect.Descriptor instead.
func (*IcefsReleaseReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{40}
}

func (x *IcefsReleaseReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsReleaseReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsReleaseReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsReleaseDirReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,3,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsReleaseDirReq) Reset() {
	*x = IcefsReleaseDirReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsReleaseDirReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsReleaseDirReq) ProtoMessage() {}

func (x *IcefsReleaseDirReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsReleaseDirReq.ProtoReflect.Descriptor instead.
func (*IcefsReleaseDirReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{41}
}

func (x *IcefsReleaseDirReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsReleaseDirReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsReleaseDirReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsRemoveXattrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req   *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode uint64   `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Name  string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IcefsRemoveXattrReq) Reset() {
	*x = IcefsRemoveXattrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsRemoveXattrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsRemoveXattrReq) ProtoMessage() {}

func (x *IcefsRemoveXattrReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsRemoveXattrReq.ProtoReflect.Descriptor instead.
func (*IcefsRemoveXattrReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{42}
}

func (x *IcefsRemoveXattrReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsRemoveXattrReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsRemoveXattrReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IcefsRenameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req            *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	ParentInode    uint64   `protobuf:"varint,2,opt,name=parent_inode,json=parentInode,proto3" json:"parent_inode,omitempty"`
	Name           string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	NewParentInode uint64   `protobuf:"varint,4,opt,name=new_parent_inode,json=newParentInode,proto3" json:"new_parent_inode,omitempty"`
	NewName        string   `protobuf:"bytes,5,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	Flags          uint32   `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *IcefsRenameReq) Reset() {
	*x = IcefsRenameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsRenameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsRenameReq) ProtoMessage() {}

func (x *IcefsRenameReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsRenameReq.ProtoReflect.Descriptor instead.
func (*IcefsRenameReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{43}
}

func (x *IcefsRenameReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsRenameReq) GetParentInode() uint64 {
	if x != nil {
		return x.ParentInode
	}
	return 0
}

func (x *IcefsRenameReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IcefsRenameReq) GetNewParentInode() uint64 {
	if x != nil {
		return x.NewParentInode
	}
	return 0
}

func (x *IcefsRenameReq) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

func (x *IcefsRenameReq) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type IcefsRetrieveReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req    *FuseReq    `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Cookie []byte      `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
	Inode  uint64      `protobuf:"varint,3,opt,name=inode,proto3" json:"inode,omitempty"`
	Offset int64       `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Data   []*IoVector `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IcefsRetrieveReplyReq) Reset() {
	*x = IcefsRetrieveReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsRetrieveReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsRetrieveReplyReq) ProtoMessage() {}

func (x *IcefsRetrieveReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsRetrieveReplyReq.ProtoReflect.Descriptor instead.
func (*IcefsRetrieveReplyReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{44}
}

func (x *IcefsRetrieveReplyReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsRetrieveReplyReq) GetCookie() []byte {
	if x != nil {
		return x.Cookie
	}
	return nil
}

func (x *IcefsRetrieveReplyReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsRetrieveReplyReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *IcefsRetrieveReplyReq) GetData() []*IoVector {
	if x != nil {
		return x.Data
	}
	return nil
}

type IcefsRmDirReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req         *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	ParentInode uint64   `protobuf:"varint,2,opt,name=parent_inode,json=parentInode,proto3" json:"parent_inode,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IcefsRmDirReq) Reset() {
	*x = IcefsRmDirReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsRmDirReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsRmDirReq) ProtoMessage() {}

func (x *IcefsRmDirReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsRmDirReq.ProtoReflect.Descriptor instead.
func (*IcefsRmDirReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{45}
}

func (x *IcefsRmDirReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsRmDirReq) GetParentInode() uint64 {
	if x != nil {
		return x.ParentInode
	}
	return 0
}

func (x *IcefsRmDirReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IcefsSetAttrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Stat     *StatStruct   `protobuf:"bytes,3,opt,name=stat,proto3" json:"stat,omitempty"`
	ToSet    int32         `protobuf:"varint,4,opt,name=to_set,json=toSet,proto3" json:"to_set,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,5,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsSetAttrReq) Reset() {
	*x = IcefsSetAttrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsSetAttrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsSetAttrReq) ProtoMessage() {}

func (x *IcefsSetAttrReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsSetAttrReq.ProtoReflect.Descriptor instead.
func (*IcefsSetAttrReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{46}
}

func (x *IcefsSetAttrReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsSetAttrReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsSetAttrReq) GetStat() *StatStruct {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *IcefsSetAttrReq) GetToSet() int32 {
	if x != nil {
		return x.ToSet
	}
	return 0
}

func (x *IcefsSetAttrReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsSetLkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,3,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	Lock     *FlockStruct  `protobuf:"bytes,4,opt,name=lock,proto3" json:"lock,omitempty"`
	Sleep    int32         `protobuf:"varint,5,opt,name=sleep,proto3" json:"sleep,omitempty"`
}

func (x *IcefsSetLkReq) Reset() {
	*x = IcefsSetLkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsSetLkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsSetLkReq) ProtoMessage() {}

func (x *IcefsSetLkReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsSetLkReq.ProtoReflect.Descriptor instead.
func (*IcefsSetLkReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{47}
}

func (x *IcefsSetLkReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsSetLkReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsSetLkReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *IcefsSetLkReq) GetLock() *FlockStruct {
	if x != nil {
		return x.Lock
	}
	return nil
}

func (x *IcefsSetLkReq) GetSleep() int32 {
	if x != nil {
		return x.Sleep
	}
	return 0
}

type IcefsSetXattrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req   *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode uint64   `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Name  string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Value string   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Size  uint64   `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Flags int32    `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *IcefsSetXattrReq) Reset() {
	*x = IcefsSetXattrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsSetXattrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsSetXattrReq) ProtoMessage() {}

func (x *IcefsSetXattrReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsSetXattrReq.ProtoReflect.Descriptor instead.
func (*IcefsSetXattrReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{48}
}

func (x *IcefsSetXattrReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsSetXattrReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsSetXattrReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IcefsSetXattrReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *IcefsSetXattrReq) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IcefsSetXattrReq) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type IcefsStatFSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req   *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode uint64   `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
}

func (x *IcefsStatFSReq) Reset() {
	*x = IcefsStatFSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsStatFSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsStatFSReq) ProtoMessage() {}

func (x *IcefsStatFSReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsStatFSReq.ProtoReflect.Descriptor instead.
func (*IcefsStatFSReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{49}
}

func (x *IcefsStatFSReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsStatFSReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

type IcefsSymLinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req         *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Link        string   `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	ParentInode uint64   `protobuf:"varint,3,opt,name=parent_inode,json=parentInode,proto3" json:"parent_inode,omitempty"`
	Name        string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IcefsSymLinkReq) Reset() {
	*x = IcefsSymLinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsSymLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsSymLinkReq) ProtoMessage() {}

func (x *IcefsSymLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsSymLinkReq.ProtoReflect.Descriptor instead.
func (*IcefsSymLinkReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{50}
}

func (x *IcefsSymLinkReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsSymLinkReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *IcefsSymLinkReq) GetParentInode() uint64 {
	if x != nil {
		return x.ParentInode
	}
	return 0
}

func (x *IcefsSymLinkReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IcefsUnlinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req         *FuseReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	ParentInode uint64   `protobuf:"varint,2,opt,name=parent_inode,json=parentInode,proto3" json:"parent_inode,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IcefsUnlinkReq) Reset() {
	*x = IcefsUnlinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsUnlinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsUnlinkReq) ProtoMessage() {}

func (x *IcefsUnlinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsUnlinkReq.ProtoReflect.Descriptor instead.
func (*IcefsUnlinkReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{51}
}

func (x *IcefsUnlinkReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsUnlinkReq) GetParentInode() uint64 {
	if x != nil {
		return x.ParentInode
	}
	return 0
}

func (x *IcefsUnlinkReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IcefsWriteBufReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Buf      []*IoVector   `protobuf:"bytes,3,rep,name=buf,proto3" json:"buf,omitempty"`
	Offset   int64         `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,5,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsWriteBufReq) Reset() {
	*x = IcefsWriteBufReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsWriteBufReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsWriteBufReq) ProtoMessage() {}

func (x *IcefsWriteBufReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsWriteBufReq.ProtoReflect.Descriptor instead.
func (*IcefsWriteBufReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{52}
}

func (x *IcefsWriteBufReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsWriteBufReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsWriteBufReq) GetBuf() []*IoVector {
	if x != nil {
		return x.Buf
	}
	return nil
}

func (x *IcefsWriteBufReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *IcefsWriteBufReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type IcefsWriteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req      *FuseReq      `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Inode    uint64        `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Buf      []byte        `protobuf:"bytes,3,opt,name=buf,proto3" json:"buf,omitempty"`
	Size     uint64        `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Offset   int64         `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	FileInfo *FuseFileInfo `protobuf:"bytes,6,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *IcefsWriteReq) Reset() {
	*x = IcefsWriteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsWriteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsWriteReq) ProtoMessage() {}

func (x *IcefsWriteReq) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsWriteReq.ProtoReflect.Descriptor instead.
func (*IcefsWriteReq) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{53}
}

func (x *IcefsWriteReq) GetReq() *FuseReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *IcefsWriteReq) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsWriteReq) GetBuf() []byte {
	if x != nil {
		return x.Buf
	}
	return nil
}

func (x *IcefsWriteReq) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IcefsWriteReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *IcefsWriteReq) GetFileInfo() *FuseFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

// Response
type IcefsAccessRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsAccessRes) Reset() {
	*x = IcefsAccessRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsAccessRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsAccessRes) ProtoMessage() {}

func (x *IcefsAccessRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsAccessRes.ProtoReflect.Descriptor instead.
func (*IcefsAccessRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{54}
}

func (x *IcefsAccessRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsBmapRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsBmapRes) Reset() {
	*x = IcefsBmapRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsBmapRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsBmapRes) ProtoMessage() {}

func (x *IcefsBmapRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsBmapRes.ProtoReflect.Descriptor instead.
func (*IcefsBmapRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{55}
}

func (x *IcefsBmapRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsCopyFileRangeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Size   uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *IcefsCopyFileRangeRes) Reset() {
	*x = IcefsCopyFileRangeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsCopyFileRangeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsCopyFileRangeRes) ProtoMessage() {}

func (x *IcefsCopyFileRangeRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsCopyFileRangeRes.ProtoReflect.Descriptor instead.
func (*IcefsCopyFileRangeRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{56}
}

func (x *IcefsCopyFileRangeRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsCopyFileRangeRes) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type IcefsCreateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Fh     uint64          `protobuf:"varint,2,opt,name=fh,proto3" json:"fh,omitempty"`
	Entry  *FuseEntryParam `protobuf:"bytes,3,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *IcefsCreateRes) Reset() {
	*x = IcefsCreateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsCreateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsCreateRes) ProtoMessage() {}

func (x *IcefsCreateRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsCreateRes.ProtoReflect.Descriptor instead.
func (*IcefsCreateRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{57}
}

func (x *IcefsCreateRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsCreateRes) GetFh() uint64 {
	if x != nil {
		return x.Fh
	}
	return 0
}

func (x *IcefsCreateRes) GetEntry() *FuseEntryParam {
	if x != nil {
		return x.Entry
	}
	return nil
}

type IcefsDestroyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Info   string `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *IcefsDestroyRes) Reset() {
	*x = IcefsDestroyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsDestroyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsDestroyRes) ProtoMessage() {}

func (x *IcefsDestroyRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsDestroyRes.ProtoReflect.Descriptor instead.
func (*IcefsDestroyRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{58}
}

func (x *IcefsDestroyRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsDestroyRes) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type IcefsFallocateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsFallocateRes) Reset() {
	*x = IcefsFallocateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsFallocateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsFallocateRes) ProtoMessage() {}

func (x *IcefsFallocateRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsFallocateRes.ProtoReflect.Descriptor instead.
func (*IcefsFallocateRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{59}
}

func (x *IcefsFallocateRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsFlockRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsFlockRes) Reset() {
	*x = IcefsFlockRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsFlockRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsFlockRes) ProtoMessage() {}

func (x *IcefsFlockRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsFlockRes.ProtoReflect.Descriptor instead.
func (*IcefsFlockRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{60}
}

func (x *IcefsFlockRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsFlushRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsFlushRes) Reset() {
	*x = IcefsFlushRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsFlushRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsFlushRes) ProtoMessage() {}

func (x *IcefsFlushRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsFlushRes.ProtoReflect.Descriptor instead.
func (*IcefsFlushRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{61}
}

func (x *IcefsFlushRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsForgetMultiRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsForgetMultiRes) Reset() {
	*x = IcefsForgetMultiRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsForgetMultiRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsForgetMultiRes) ProtoMessage() {}

func (x *IcefsForgetMultiRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsForgetMultiRes.ProtoReflect.Descriptor instead.
func (*IcefsForgetMultiRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{62}
}

func (x *IcefsForgetMultiRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsForgetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsForgetRes) Reset() {
	*x = IcefsForgetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsForgetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsForgetRes) ProtoMessage() {}

func (x *IcefsForgetRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsForgetRes.ProtoReflect.Descriptor instead.
func (*IcefsForgetRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{63}
}

func (x *IcefsForgetRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsFsyncRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsFsyncRes) Reset() {
	*x = IcefsFsyncRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsFsyncRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsFsyncRes) ProtoMessage() {}

func (x *IcefsFsyncRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsFsyncRes.ProtoReflect.Descriptor instead.
func (*IcefsFsyncRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{64}
}

func (x *IcefsFsyncRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsFsyncDirRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsFsyncDirRes) Reset() {
	*x = IcefsFsyncDirRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsFsyncDirRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsFsyncDirRes) ProtoMessage() {}

func (x *IcefsFsyncDirRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsFsyncDirRes.ProtoReflect.Descriptor instead.
func (*IcefsFsyncDirRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{65}
}

func (x *IcefsFsyncDirRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsGetAttrRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Stat   *StatStruct `protobuf:"bytes,2,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *IcefsGetAttrRes) Reset() {
	*x = IcefsGetAttrRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsGetAttrRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsGetAttrRes) ProtoMessage() {}

func (x *IcefsGetAttrRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsGetAttrRes.ProtoReflect.Descriptor instead.
func (*IcefsGetAttrRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{66}
}

func (x *IcefsGetAttrRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsGetAttrRes) GetStat() *StatStruct {
	if x != nil {
		return x.Stat
	}
	return nil
}

type IcefsGetLkRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsGetLkRes) Reset() {
	*x = IcefsGetLkRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsGetLkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsGetLkRes) ProtoMessage() {}

func (x *IcefsGetLkRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsGetLkRes.ProtoReflect.Descriptor instead.
func (*IcefsGetLkRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{67}
}

func (x *IcefsGetLkRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsGetXattrRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Size   int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Value  []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IcefsGetXattrRes) Reset() {
	*x = IcefsGetXattrRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsGetXattrRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsGetXattrRes) ProtoMessage() {}

func (x *IcefsGetXattrRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsGetXattrRes.ProtoReflect.Descriptor instead.
func (*IcefsGetXattrRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{68}
}

func (x *IcefsGetXattrRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsGetXattrRes) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IcefsGetXattrRes) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type IcefsInitRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Info   string `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Can    uint32 `protobuf:"varint,3,opt,name=can,proto3" json:"can,omitempty"`
}

func (x *IcefsInitRes) Reset() {
	*x = IcefsInitRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsInitRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsInitRes) ProtoMessage() {}

func (x *IcefsInitRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsInitRes.ProtoReflect.Descriptor instead.
func (*IcefsInitRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{69}
}

func (x *IcefsInitRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsInitRes) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *IcefsInitRes) GetCan() uint32 {
	if x != nil {
		return x.Can
	}
	return 0
}

type IcefsIoctlRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32         `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Out    *FuseIoctlOut `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
	Data   []*IoVector   `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IcefsIoctlRes) Reset() {
	*x = IcefsIoctlRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsIoctlRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsIoctlRes) ProtoMessage() {}

func (x *IcefsIoctlRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsIoctlRes.ProtoReflect.Descriptor instead.
func (*IcefsIoctlRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{70}
}

func (x *IcefsIoctlRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsIoctlRes) GetOut() *FuseIoctlOut {
	if x != nil {
		return x.Out
	}
	return nil
}

func (x *IcefsIoctlRes) GetData() []*IoVector {
	if x != nil {
		return x.Data
	}
	return nil
}

type IcefsLinkRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Entry  *FuseEntryParam `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *IcefsLinkRes) Reset() {
	*x = IcefsLinkRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsLinkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsLinkRes) ProtoMessage() {}

func (x *IcefsLinkRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsLinkRes.ProtoReflect.Descriptor instead.
func (*IcefsLinkRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{71}
}

func (x *IcefsLinkRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsLinkRes) GetEntry() *FuseEntryParam {
	if x != nil {
		return x.Entry
	}
	return nil
}

type IcefsListXattrRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Size   int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Value  []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IcefsListXattrRes) Reset() {
	*x = IcefsListXattrRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsListXattrRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsListXattrRes) ProtoMessage() {}

func (x *IcefsListXattrRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsListXattrRes.ProtoReflect.Descriptor instead.
func (*IcefsListXattrRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{72}
}

func (x *IcefsListXattrRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsListXattrRes) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IcefsListXattrRes) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type IcefsLookUpRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Entry  *FuseEntryParam `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *IcefsLookUpRes) Reset() {
	*x = IcefsLookUpRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsLookUpRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsLookUpRes) ProtoMessage() {}

func (x *IcefsLookUpRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsLookUpRes.ProtoReflect.Descriptor instead.
func (*IcefsLookUpRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{73}
}

func (x *IcefsLookUpRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsLookUpRes) GetEntry() *FuseEntryParam {
	if x != nil {
		return x.Entry
	}
	return nil
}

type IcefsLseekRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *IcefsLseekRes) Reset() {
	*x = IcefsLseekRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsLseekRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsLseekRes) ProtoMessage() {}

func (x *IcefsLseekRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsLseekRes.ProtoReflect.Descriptor instead.
func (*IcefsLseekRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{74}
}

func (x *IcefsLseekRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsLseekRes) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type IcefsMkDirRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Entry  *FuseEntryParam `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *IcefsMkDirRes) Reset() {
	*x = IcefsMkDirRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsMkDirRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsMkDirRes) ProtoMessage() {}

func (x *IcefsMkDirRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsMkDirRes.ProtoReflect.Descriptor instead.
func (*IcefsMkDirRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{75}
}

func (x *IcefsMkDirRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsMkDirRes) GetEntry() *FuseEntryParam {
	if x != nil {
		return x.Entry
	}
	return nil
}

type IcefsMknodRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Entry  *FuseEntryParam `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *IcefsMknodRes) Reset() {
	*x = IcefsMknodRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsMknodRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsMknodRes) ProtoMessage() {}

func (x *IcefsMknodRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsMknodRes.ProtoReflect.Descriptor instead.
func (*IcefsMknodRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{76}
}

func (x *IcefsMknodRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsMknodRes) GetEntry() *FuseEntryParam {
	if x != nil {
		return x.Entry
	}
	return nil
}

type IcefsOpenRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Fh     uint64 `protobuf:"varint,2,opt,name=fh,proto3" json:"fh,omitempty"`
}

func (x *IcefsOpenRes) Reset() {
	*x = IcefsOpenRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsOpenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsOpenRes) ProtoMessage() {}

func (x *IcefsOpenRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsOpenRes.ProtoReflect.Descriptor instead.
func (*IcefsOpenRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{77}
}

func (x *IcefsOpenRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsOpenRes) GetFh() uint64 {
	if x != nil {
		return x.Fh
	}
	return 0
}

type IcefsOpenDirRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Fh     uint64 `protobuf:"varint,2,opt,name=fh,proto3" json:"fh,omitempty"`
}

func (x *IcefsOpenDirRes) Reset() {
	*x = IcefsOpenDirRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsOpenDirRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsOpenDirRes) ProtoMessage() {}

func (x *IcefsOpenDirRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsOpenDirRes.ProtoReflect.Descriptor instead.
func (*IcefsOpenDirRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{78}
}

func (x *IcefsOpenDirRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsOpenDirRes) GetFh() uint64 {
	if x != nil {
		return x.Fh
	}
	return 0
}

type IcefsPollRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Revents uint32 `protobuf:"varint,2,opt,name=revents,proto3" json:"revents,omitempty"`
}

func (x *IcefsPollRes) Reset() {
	*x = IcefsPollRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsPollRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsPollRes) ProtoMessage() {}

func (x *IcefsPollRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsPollRes.ProtoReflect.Descriptor instead.
func (*IcefsPollRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{79}
}

func (x *IcefsPollRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsPollRes) GetRevents() uint32 {
	if x != nil {
		return x.Revents
	}
	return 0
}

type IcefsReadRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Size   uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IcefsReadRes) Reset() {
	*x = IcefsReadRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsReadRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsReadRes) ProtoMessage() {}

func (x *IcefsReadRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsReadRes.ProtoReflect.Descriptor instead.
func (*IcefsReadRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{80}
}

func (x *IcefsReadRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsReadRes) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IcefsReadRes) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type IcefsReadDirRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   []*DirentStruct `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IcefsReadDirRes) Reset() {
	*x = IcefsReadDirRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsReadDirRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsReadDirRes) ProtoMessage() {}

func (x *IcefsReadDirRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsReadDirRes.ProtoReflect.Descriptor instead.
func (*IcefsReadDirRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{81}
}

func (x *IcefsReadDirRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsReadDirRes) GetData() []*DirentStruct {
	if x != nil {
		return x.Data
	}
	return nil
}

type IcefsReadDirPlusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32                          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   []*IcefsReadDirPlusResDataPlus `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IcefsReadDirPlusRes) Reset() {
	*x = IcefsReadDirPlusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsReadDirPlusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsReadDirPlusRes) ProtoMessage() {}

func (x *IcefsReadDirPlusRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsReadDirPlusRes.ProtoReflect.Descriptor instead.
func (*IcefsReadDirPlusRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{82}
}

func (x *IcefsReadDirPlusRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsReadDirPlusRes) GetData() []*IcefsReadDirPlusResDataPlus {
	if x != nil {
		return x.Data
	}
	return nil
}

type IcefsReadLinkRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Path   string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *IcefsReadLinkRes) Reset() {
	*x = IcefsReadLinkRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsReadLinkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsReadLinkRes) ProtoMessage() {}

func (x *IcefsReadLinkRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsReadLinkRes.ProtoReflect.Descriptor instead.
func (*IcefsReadLinkRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{83}
}

func (x *IcefsReadLinkRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsReadLinkRes) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type IcefsReleaseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsReleaseRes) Reset() {
	*x = IcefsReleaseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsReleaseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsReleaseRes) ProtoMessage() {}

func (x *IcefsReleaseRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsReleaseRes.ProtoReflect.Descriptor instead.
func (*IcefsReleaseRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{84}
}

func (x *IcefsReleaseRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsReleaseDirRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsReleaseDirRes) Reset() {
	*x = IcefsReleaseDirRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsReleaseDirRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsReleaseDirRes) ProtoMessage() {}

func (x *IcefsReleaseDirRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsReleaseDirRes.ProtoReflect.Descriptor instead.
func (*IcefsReleaseDirRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{85}
}

func (x *IcefsReleaseDirRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsRemoveXattrRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsRemoveXattrRes) Reset() {
	*x = IcefsRemoveXattrRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsRemoveXattrRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsRemoveXattrRes) ProtoMessage() {}

func (x *IcefsRemoveXattrRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsRemoveXattrRes.ProtoReflect.Descriptor instead.
func (*IcefsRemoveXattrRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{86}
}

func (x *IcefsRemoveXattrRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsRenameRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsRenameRes) Reset() {
	*x = IcefsRenameRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsRenameRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsRenameRes) ProtoMessage() {}

func (x *IcefsRenameRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsRenameRes.ProtoReflect.Descriptor instead.
func (*IcefsRenameRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{87}
}

func (x *IcefsRenameRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsRetrieveReplyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsRetrieveReplyRes) Reset() {
	*x = IcefsRetrieveReplyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsRetrieveReplyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsRetrieveReplyRes) ProtoMessage() {}

func (x *IcefsRetrieveReplyRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsRetrieveReplyRes.ProtoReflect.Descriptor instead.
func (*IcefsRetrieveReplyRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{88}
}

func (x *IcefsRetrieveReplyRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsRmDirRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsRmDirRes) Reset() {
	*x = IcefsRmDirRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsRmDirRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsRmDirRes) ProtoMessage() {}

func (x *IcefsRmDirRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsRmDirRes.ProtoReflect.Descriptor instead.
func (*IcefsRmDirRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{89}
}

func (x *IcefsRmDirRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsSetAttrRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Stat   *StatStruct `protobuf:"bytes,2,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *IcefsSetAttrRes) Reset() {
	*x = IcefsSetAttrRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsSetAttrRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsSetAttrRes) ProtoMessage() {}

func (x *IcefsSetAttrRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsSetAttrRes.ProtoReflect.Descriptor instead.
func (*IcefsSetAttrRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{90}
}

func (x *IcefsSetAttrRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsSetAttrRes) GetStat() *StatStruct {
	if x != nil {
		return x.Stat
	}
	return nil
}

type IcefsSetLkRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsSetLkRes) Reset() {
	*x = IcefsSetLkRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsSetLkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsSetLkRes) ProtoMessage() {}

func (x *IcefsSetLkRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsSetLkRes.ProtoReflect.Descriptor instead.
func (*IcefsSetLkRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{91}
}

func (x *IcefsSetLkRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsSetXattrRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsSetXattrRes) Reset() {
	*x = IcefsSetXattrRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsSetXattrRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsSetXattrRes) ProtoMessage() {}

func (x *IcefsSetXattrRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsSetXattrRes.ProtoReflect.Descriptor instead.
func (*IcefsSetXattrRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{92}
}

func (x *IcefsSetXattrRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsStatFSRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Statvfs *StatvfsStruct `protobuf:"bytes,2,opt,name=statvfs,proto3" json:"statvfs,omitempty"`
}

func (x *IcefsStatFSRes) Reset() {
	*x = IcefsStatFSRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsStatFSRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsStatFSRes) ProtoMessage() {}

func (x *IcefsStatFSRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsStatFSRes.ProtoReflect.Descriptor instead.
func (*IcefsStatFSRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{93}
}

func (x *IcefsStatFSRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsStatFSRes) GetStatvfs() *StatvfsStruct {
	if x != nil {
		return x.Statvfs
	}
	return nil
}

type IcefsSymLinkRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Entry  *FuseEntryParam `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *IcefsSymLinkRes) Reset() {
	*x = IcefsSymLinkRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsSymLinkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsSymLinkRes) ProtoMessage() {}

func (x *IcefsSymLinkRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsSymLinkRes.ProtoReflect.Descriptor instead.
func (*IcefsSymLinkRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{94}
}

func (x *IcefsSymLinkRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsSymLinkRes) GetEntry() *FuseEntryParam {
	if x != nil {
		return x.Entry
	}
	return nil
}

type IcefsUnlinkRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IcefsUnlinkRes) Reset() {
	*x = IcefsUnlinkRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsUnlinkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsUnlinkRes) ProtoMessage() {}

func (x *IcefsUnlinkRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsUnlinkRes.ProtoReflect.Descriptor instead.
func (*IcefsUnlinkRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{95}
}

func (x *IcefsUnlinkRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type IcefsWriteBufRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Size   uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *IcefsWriteBufRes) Reset() {
	*x = IcefsWriteBufRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsWriteBufRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsWriteBufRes) ProtoMessage() {}

func (x *IcefsWriteBufRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsWriteBufRes.ProtoReflect.Descriptor instead.
func (*IcefsWriteBufRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{96}
}

func (x *IcefsWriteBufRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsWriteBufRes) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type IcefsWriteRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Size   uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *IcefsWriteRes) Reset() {
	*x = IcefsWriteRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsWriteRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsWriteRes) ProtoMessage() {}

func (x *IcefsWriteRes) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsWriteRes.ProtoReflect.Descriptor instead.
func (*IcefsWriteRes) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{97}
}

func (x *IcefsWriteRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IcefsWriteRes) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type IcefsForgetMultiReqForgetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inode   uint64 `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`
	Nlookup uint64 `protobuf:"varint,2,opt,name=nlookup,proto3" json:"nlookup,omitempty"`
}

func (x *IcefsForgetMultiReqForgetData) Reset() {
	*x = IcefsForgetMultiReqForgetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsForgetMultiReqForgetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsForgetMultiReqForgetData) ProtoMessage() {}

func (x *IcefsForgetMultiReqForgetData) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsForgetMultiReqForgetData.ProtoReflect.Descriptor instead.
func (*IcefsForgetMultiReqForgetData) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{18, 0}
}

func (x *IcefsForgetMultiReqForgetData) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *IcefsForgetMultiReqForgetData) GetNlookup() uint64 {
	if x != nil {
		return x.Nlookup
	}
	return 0
}

type IcefsReadDirPlusResDataPlus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry    *FuseEntryParam `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	DirEntry *DirentStruct   `protobuf:"bytes,2,opt,name=dir_entry,json=dirEntry,proto3" json:"dir_entry,omitempty"`
}

func (x *IcefsReadDirPlusResDataPlus) Reset() {
	*x = IcefsReadDirPlusResDataPlus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_icefs_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcefsReadDirPlusResDataPlus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcefsReadDirPlusResDataPlus) ProtoMessage() {}

func (x *IcefsReadDirPlusResDataPlus) ProtoReflect() protoreflect.Message {
	mi := &file_icefs_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcefsReadDirPlusResDataPlus.ProtoReflect.Descriptor instead.
func (*IcefsReadDirPlusResDataPlus) Descriptor() ([]byte, []int) {
	return file_icefs_proto_rawDescGZIP(), []int{82, 0}
}

func (x *IcefsReadDirPlusResDataPlus) GetEntry() *FuseEntryParam {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *IcefsReadDirPlusResDataPlus) GetDirEntry() *DirentStruct {
	if x != nil {
		return x.DirEntry
	}
	return nil
}

var File_icefs_proto protoreflect.FileDescriptor

var file_icefs_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x69, 0x63, 0x65, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x66,
	0x75, 0x73, 0x65, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x55, 0x0a, 0x07, 0x46, 0x75, 0x73, 0x65, 0x43, 0x74, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x75, 0x6d, 0x61, 0x73, 0x6b, 0x22, 0x3d, 0x0a, 0x07, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x03, 0x63, 0x74, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x43, 0x74, 0x78,
	0x52, 0x03, 0x63, 0x74, 0x78, 0x22, 0xea, 0x02, 0x0a, 0x0c, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x65, 0x70, 0x5f,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6b, 0x65, 0x65,
	0x70, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b,
	0x6e, 0x6f, 0x6e, 0x73, 0x65, 0x65, 0x6b, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x6e, 0x6f, 0x6e, 0x73, 0x65, 0x65, 0x6b, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x66, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x72, 0x65, 0x61,
	0x64, 0x64, 0x69, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x61, 0x64, 0x64, 0x69, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x66, 0x6c,
	0x75, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x66, 0x6c, 0x75,
	0x73, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x66, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x68, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x70, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x6f,
	0x63, 0x6b, 0x50, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x1c,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4e, 0x53, 0x65, 0x63, 0x22, 0xfc, 0x02, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73,
	0x74, 0x5f, 0x64, 0x65, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x44,
	0x65, 0x76, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x49, 0x6e, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x5f, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x4e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x15, 0x0a,
	0x06, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x74, 0x55, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x74, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x47, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x74, 0x5f, 0x72, 0x64, 0x65, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x74,
	0x52, 0x64, 0x65, 0x76, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a,
	0x07, 0x73, 0x74, 0x5f, 0x61, 0x74, 0x69, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x73, 0x74, 0x41,
	0x74, 0x69, 0x6d, 0x12, 0x24, 0x0a, 0x07, 0x73, 0x74, 0x5f, 0x6d, 0x74, 0x69, 0x6d, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x06, 0x73, 0x74, 0x4d, 0x74, 0x69, 0x6d, 0x12, 0x24, 0x0a, 0x07, 0x73, 0x74, 0x5f,
	0x63, 0x74, 0x69, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x73, 0x74, 0x43, 0x74, 0x69, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x42, 0x6c, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x0e,
	0x46, 0x75, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x72, 0x0a,
	0x0c, 0x44, 0x69, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x6f, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x66,
	0x66, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6c, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6c, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xc2, 0x02, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x76, 0x66, 0x73, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x5f, 0x62, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x42, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x5f, 0x66, 0x72, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x66, 0x46, 0x72, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x5f, 0x62, 0x66, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x42, 0x66, 0x72, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x5f, 0x62, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66,
	0x42, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x66, 0x5f, 0x66, 0x66, 0x72, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x66, 0x46, 0x66, 0x72, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x5f, 0x66, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x46, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x5f, 0x66, 0x73, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x46, 0x73, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e,
	0x75, 0x73, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x6e, 0x75, 0x73,
	0x65, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x66, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x6d, 0x61, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x4e,
	0x61, 0x6d, 0x65, 0x6d, 0x61, 0x78, 0x22, 0x32, 0x0a, 0x08, 0x69, 0x6f, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x56, 0x0a, 0x0e, 0x49, 0x63,
	0x65, 0x66, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03,
	0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x61,
	0x73, 0x6b, 0x22, 0x73, 0x0a, 0x0c, 0x49, 0x63, 0x65, 0x66, 0x73, 0x42, 0x6d, 0x61, 0x70, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xb3, 0x02, 0x0a, 0x15, 0x49, 0x63, 0x65, 0x66,
	0x73, 0x43, 0x6f, 0x70, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x49, 0x6e, 0x12, 0x2f, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75,
	0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x6f, 0x64, 0x65,
	0x4f, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6f, 0x75,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4f,
	0x75, 0x74, 0x12, 0x31, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x4f, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6c, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0xa3, 0x01,
	0x0a, 0x0e, 0x49, 0x63, 0x65, 0x66, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x42, 0x0a, 0x0f, 0x49, 0x63, 0x65, 0x66, 0x73, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xb5, 0x01, 0x0a, 0x11, 0x49, 0x63, 0x65, 0x66,
	0x73, 0x46, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x7d, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x46, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f,
	0x64, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x70, 0x22, 0x6d,
	0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46,
	0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc5, 0x01,
	0x0a, 0x13, 0x49, 0x63, 0x65, 0x66, 0x73, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x66, 0x6f,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x49, 0x63, 0x65,
	0x66, 0x73, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71,
	0x2e, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x74, 0x6f,
	0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x3d, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6e, 0x6c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x22, 0x5c, 0x0a, 0x0e, 0x49, 0x63, 0x65, 0x66, 0x73, 0x46, 0x6f,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03,
	0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6e, 0x6c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x22, 0x8a, 0x01, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x46, 0x73, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x79, 0x6e, 0x63, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x8d, 0x01, 0x0a, 0x10, 0x49, 0x63, 0x65, 0x66, 0x73, 0x46, 0x73, 0x79, 0x6e, 0x63, 0x44,
	0x69, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x79, 0x6e, 0x63, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x6f, 0x0a, 0x0f, 0x49, 0x63, 0x65, 0x66, 0x73, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x47, 0x65, 0x74, 0x4c, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x66, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x6c,
	0x6f, 0x63, 0x6b, 0x22, 0x6c, 0x0a, 0x10, 0x49, 0x63, 0x65, 0x66, 0x73, 0x47, 0x65, 0x74, 0x58,
	0x61, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03,
	0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x22, 0x64, 0x0a, 0x0c, 0x49, 0x63, 0x65, 0x66, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x77, 0x61, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66,
	0x73, 0x49, 0x6f, 0x63, 0x74, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x72, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x61, 0x72, 0x67, 0x12,
	0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x6e, 0x5f, 0x62, 0x75, 0x66, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x75, 0x66, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x42, 0x75, 0x66, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x0c, 0x49, 0x63, 0x65, 0x66, 0x73, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x11, 0x49,
	0x63, 0x65, 0x66, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x58, 0x61, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x63, 0x0a, 0x0e, 0x49, 0x63, 0x65, 0x66, 0x73, 0x4c,
	0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52,
	0x03, 0x72, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x0d,
	0x49, 0x63, 0x65, 0x66, 0x73, 0x4c, 0x73, 0x65, 0x65, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x68, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x68, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x76, 0x0a, 0x0d, 0x49,
	0x63, 0x65, 0x66, 0x73, 0x4d, 0x6b, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03,
	0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x4d, 0x6b, 0x6e,
	0x6f, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x64, 0x65, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x72, 0x64, 0x65, 0x76,
	0x22, 0x6c, 0x0a, 0x0c, 0x49, 0x63, 0x65, 0x66, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f,
	0x64, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6f,
	0x0a, 0x0f, 0x49, 0x63, 0x65, 0x66, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x69, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e,
	0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x6c, 0x0a, 0x0c, 0x49, 0x63, 0x65, 0x66, 0x73, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46,
	0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x98, 0x01,
	0x0a, 0x0c, 0x49, 0x63, 0x65, 0x66, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x49, 0x63, 0x65,
	0x66, 0x73, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03,
	0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x49, 0x63, 0x65, 0x66, 0x73,
	0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x72, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x10, 0x49, 0x63, 0x65, 0x66,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03,
	0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x6f,
	0x0a, 0x0f, 0x49, 0x63, 0x65, 0x66, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e,
	0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x72, 0x0a, 0x12, 0x49, 0x63, 0x65, 0x66, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44,
	0x69, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x5b, 0x0a, 0x13, 0x49, 0x63, 0x65, 0x66, 0x73, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x58, 0x61, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xbe, 0x01, 0x0a, 0x0e, 0x49, 0x63, 0x65, 0x66, 0x73, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x22, 0x98, 0x01, 0x0a, 0x15, 0x49, 0x63, 0x65, 0x66, 0x73, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x69, 0x6f,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x0d,
	0x49, 0x63, 0x65, 0x66, 0x73, 0x52, 0x6d, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xa7, 0x01, 0x0a, 0x0f, 0x49, 0x63, 0x65, 0x66, 0x73, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x53, 0x65, 0x74, 0x12, 0x2a,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa5, 0x01, 0x0a, 0x0d, 0x49,
	0x63, 0x65, 0x66, 0x73, 0x53, 0x65, 0x74, 0x4c, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03,
	0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x2a,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x66, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x6c, 0x65, 0x65, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x6c, 0x65,
	0x65, 0x70, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x49, 0x63, 0x65, 0x66, 0x73, 0x53, 0x65, 0x74, 0x58,
	0x61, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03,
	0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x42, 0x0a,
	0x0e, 0x49, 0x63, 0x65, 0x66, 0x73, 0x53, 0x74, 0x61, 0x74, 0x46, 0x53, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46,
	0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x22, 0x78, 0x0a, 0x0f, 0x49, 0x63, 0x65, 0x66, 0x73, 0x53, 0x79, 0x6d, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x0e, 0x49,
	0x63, 0x65, 0x66, 0x73, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xa5, 0x01, 0x0a, 0x10, 0x49, 0x63, 0x65, 0x66, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42,
	0x75, 0x66, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x62, 0x75, 0x66, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x69, 0x6f, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x03, 0x62, 0x75, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xab, 0x01, 0x0a, 0x0d, 0x49, 0x63, 0x65,
	0x66, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x03, 0x72, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x62, 0x75, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x62, 0x75, 0x66, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x46, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x28, 0x0a, 0x0e, 0x49, 0x63, 0x65, 0x66, 0x73, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x26, 0x0a, 0x0c, 0x49, 0x63, 0x65, 0x66, 0x73, 0x42, 0x6d, 0x61, 0x70, 0x52, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x43, 0x0a, 0x15, 0x49, 0x63, 0x65, 0x66,
	0x73, 0x43, 0x6f, 0x70, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x5f, 0x0a,
	0x0e, 0x49, 0x63, 0x65, 0x66, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x66, 0x68, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x3d,
	0x0a, 0x0f, 0x49, 0x63, 0x65, 0x66, 0x73, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x2b, 0x0a,
	0x11, 0x49, 0x63, 0x65, 0x66, 0x73, 0x46, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x0d, 0x49, 0x63,
	0x65, 0x66, 0x73, 0x46, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x46, 0x6c, 0x75, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2d, 0x0a, 0x13,
	0x49, 0x63, 0x65, 0x66, 0x73, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x49,
	0x63, 0x65, 0x66, 0x73, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x46, 0x73,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2a,
	0x0a, 0x10, 0x49, 0x63, 0x65, 0x66, 0x73, 0x46, 0x73, 0x79, 0x6e, 0x63, 0x44, 0x69, 0x72, 0x52,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4a, 0x0a, 0x0f, 0x49, 0x63,
	0x65, 0x66, 0x73, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x22, 0x27, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x47,
	0x65, 0x74, 0x4c, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x54, 0x0a, 0x10, 0x49, 0x63, 0x65, 0x66, 0x73, 0x47, 0x65, 0x74, 0x58, 0x61, 0x74, 0x74, 0x72,
	0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4c, 0x0a, 0x0c, 0x49, 0x63, 0x65, 0x66, 0x73, 0x49, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x63, 0x61, 0x6e, 0x22, 0x67, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x49, 0x6f, 0x63, 0x74,
	0x6c, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x03,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x73, 0x65,
	0x49, 0x6f, 0x63, 0x74, 0x6c, 0x4f, 0x75, 0x74, 0x52, 0x03, 0x6f, 0x75, 0x74, 0x12, 0x1d, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x69, 0x6f,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x0c,
	0x49, 0x63, 0x65, 0x66, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x55, 0x0a, 0x11, 0x49,
	0x63, 0x65, 0x66, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x58, 0x61, 0x74, 0x74, 0x72, 0x52, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x4f, 0x0a, 0x0e, 0x49, 0x63, 0x65, 0x66, 0x73, 0x4c, 0x6f, 0x6f, 0x6b, 0x55,
	0x70, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x05,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x75,
	0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x22, 0x3f, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x4c, 0x73, 0x65, 0x65,
	0x6b, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0x4e, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x4d, 0x6b, 0x44,
	0x69, 0x72, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46,
	0x75, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x22, 0x4e, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x4d, 0x6b, 0x6e,
	0x6f, 0x64, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46,
	0x75, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x22, 0x36, 0x0a, 0x0c, 0x49, 0x63, 0x65, 0x66, 0x73, 0x4f, 0x70, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x66, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x66, 0x68, 0x22, 0x39, 0x0a, 0x0f,
	0x49, 0x63, 0x65, 0x66, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x66, 0x68, 0x22, 0x40, 0x0a, 0x0c, 0x49, 0x63, 0x65, 0x66, 0x73,
	0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4e, 0x0a, 0x0c, 0x49, 0x63, 0x65,
	0x66, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x0f, 0x49, 0x63, 0x65,
	0x66, 0x73, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc1, 0x01, 0x0a, 0x13, 0x49, 0x63, 0x65, 0x66,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x72, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x49, 0x63, 0x65, 0x66, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x44, 0x69, 0x72, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x6c, 0x75, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x5e, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x2a, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x08, 0x64, 0x69, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x3e, 0x0a, 0x10, 0x49,
	0x63, 0x65, 0x66, 0x73, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x29, 0x0a, 0x0f, 0x49,
	0x63, 0x65, 0x66, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x49, 0x63, 0x65, 0x66, 0x73, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x2d, 0x0a, 0x13, 0x49, 0x63, 0x65, 0x66, 0x73, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x58, 0x61, 0x74, 0x74, 0x72, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x49, 0x63, 0x65, 0x66, 0x73, 0x52, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2f, 0x0a,
	0x15, 0x49, 0x63, 0x65, 0x66, 0x73, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x27,
	0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x52, 0x6d, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4a, 0x0a, 0x0f, 0x49, 0x63, 0x65, 0x66, 0x73,
	0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x73,
	0x74, 0x61, 0x74, 0x22, 0x27, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66, 0x73, 0x53, 0x65, 0x74, 0x4c,
	0x6b, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2a, 0x0a, 0x10,
	0x49, 0x63, 0x65, 0x66, 0x73, 0x53, 0x65, 0x74, 0x58, 0x61, 0x74, 0x74, 0x72, 0x52, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x52, 0x0a, 0x0e, 0x49, 0x63, 0x65, 0x66,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x46, 0x53, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x76, 0x66, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x76, 0x66, 0x73, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x76, 0x66, 0x73, 0x22, 0x50, 0x0a, 0x0f,
	0x49, 0x63, 0x65, 0x66, 0x73, 0x53, 0x79, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x28,
	0x0a, 0x0e, 0x49, 0x63, 0x65, 0x66, 0x73, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3e, 0x0a, 0x10, 0x49, 0x63, 0x65, 0x66,
	0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42, 0x75, 0x66, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x66,
	0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x69, 0x63, 0x65, 0x66,
	0x73, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_icefs_proto_rawDescOnce sync.Once
	file_icefs_proto_rawDescData = file_icefs_proto_rawDesc
)

func file_icefs_proto_rawDescGZIP() []byte {
	file_icefs_proto_rawDescOnce.Do(func() {
		file_icefs_proto_rawDescData = protoimpl.X.CompressGZIP(file_icefs_proto_rawDescData)
	})
	return file_icefs_proto_rawDescData
}

var file_icefs_proto_msgTypes = make([]protoimpl.MessageInfo, 100)
var file_icefs_proto_goTypes = []interface{}{
	(*FuseCtx)(nil),                       // 0: FuseCtx
	(*FuseReq)(nil),                       // 1: FuseReq
	(*FuseFileInfo)(nil),                  // 2: FuseFileInfo
	(*FlockStruct)(nil),                   // 3: flockStruct
	(*TimeStruct)(nil),                    // 4: timeStruct
	(*StatStruct)(nil),                    // 5: statStruct
	(*FuseEntryParam)(nil),                // 6: FuseEntryParam
	(*DirentStruct)(nil),                  // 7: DirentStruct
	(*StatvfsStruct)(nil),                 // 8: statvfsStruct
	(*IoVector)(nil),                      // 9: ioVector
	(*IcefsAccessReq)(nil),                // 10: IcefsAccessReq
	(*IcefsBmapReq)(nil),                  // 11: IcefsBmapReq
	(*IcefsCopyFileRangeReq)(nil),         // 12: IcefsCopyFileRangeReq
	(*IcefsCreateReq)(nil),                // 13: IcefsCreateReq
	(*IcefsDestroyReq)(nil),               // 14: IcefsDestroyReq
	(*IcefsFallocateReq)(nil),             // 15: IcefsFallocateReq
	(*IcefsFlockReq)(nil),                 // 16: IcefsFlockReq
	(*IcefsFlushReq)(nil),                 // 17: IcefsFlushReq
	(*IcefsForgetMultiReq)(nil),           // 18: IcefsForgetMultiReq
	(*IcefsForgetReq)(nil),                // 19: IcefsForgetReq
	(*IcefsFsyncReq)(nil),                 // 20: IcefsFsyncReq
	(*IcefsFsyncDirReq)(nil),              // 21: IcefsFsyncDirReq
	(*IcefsGetAttrReq)(nil),               // 22: IcefsGetAttrReq
	(*IcefsGetLkReq)(nil),                 // 23: IcefsGetLkReq
	(*IcefsGetXattrReq)(nil),              // 24: IcefsGetXattrReq
	(*IcefsInitReq)(nil),                  // 25: IcefsInitReq
	(*IcefsIoctlReq)(nil),                 // 26: IcefsIoctlReq
	(*IcefsLinkReq)(nil),                  // 27: IcefsLinkReq
	(*IcefsListXattrReq)(nil),             // 28: IcefsListXattrReq
	(*IcefsLookUpReq)(nil),                // 29: IcefsLookUpReq
	(*IcefsLseekReq)(nil),                 // 30: IcefsLseekReq
	(*IcefsMkDirReq)(nil),                 // 31: IcefsMkDirReq
	(*IcefsMknodReq)(nil),                 // 32: IcefsMknodReq
	(*IcefsOpenReq)(nil),                  // 33: IcefsOpenReq
	(*IcefsOpenDirReq)(nil),               // 34: IcefsOpenDirReq
	(*IcefsPollReq)(nil),                  // 35: IcefsPollReq
	(*IcefsReadReq)(nil),                  // 36: IcefsReadReq
	(*IcefsReadDirReq)(nil),               // 37: IcefsReadDirReq
	(*IcefsReadDirPlusReq)(nil),           // 38: IcefsReadDirPlusReq
	(*IcefsReadLinkReq)(nil),              // 39: IcefsReadLinkReq
	(*IcefsReleaseReq)(nil),               // 40: IcefsReleaseReq
	(*IcefsReleaseDirReq)(nil),            // 41: IcefsReleaseDirReq
	(*IcefsRemoveXattrReq)(nil),           // 42: IcefsRemoveXattrReq
	(*IcefsRenameReq)(nil),                // 43: IcefsRenameReq
	(*IcefsRetrieveReplyReq)(nil),         // 44: IcefsRetrieveReplyReq
	(*IcefsRmDirReq)(nil),                 // 45: IcefsRmDirReq
	(*IcefsSetAttrReq)(nil),               // 46: IcefsSetAttrReq
	(*IcefsSetLkReq)(nil),                 // 47: IcefsSetLkReq
	(*IcefsSetXattrReq)(nil),              // 48: IcefsSetXattrReq
	(*IcefsStatFSReq)(nil),                // 49: IcefsStatFSReq
	(*IcefsSymLinkReq)(nil),               // 50: IcefsSymLinkReq
	(*IcefsUnlinkReq)(nil),                // 51: IcefsUnlinkReq
	(*IcefsWriteBufReq)(nil),              // 52: IcefsWriteBufReq
	(*IcefsWriteReq)(nil),                 // 53: IcefsWriteReq
	(*IcefsAccessRes)(nil),                // 54: IcefsAccessRes
	(*IcefsBmapRes)(nil),                  // 55: IcefsBmapRes
	(*IcefsCopyFileRangeRes)(nil),         // 56: IcefsCopyFileRangeRes
	(*IcefsCreateRes)(nil),                // 57: IcefsCreateRes
	(*IcefsDestroyRes)(nil),               // 58: IcefsDestroyRes
	(*IcefsFallocateRes)(nil),             // 59: IcefsFallocateRes
	(*IcefsFlockRes)(nil),                 // 60: IcefsFlockRes
	(*IcefsFlushRes)(nil),                 // 61: IcefsFlushRes
	(*IcefsForgetMultiRes)(nil),           // 62: IcefsForgetMultiRes
	(*IcefsForgetRes)(nil),                // 63: IcefsForgetRes
	(*IcefsFsyncRes)(nil),                 // 64: IcefsFsyncRes
	(*IcefsFsyncDirRes)(nil),              // 65: IcefsFsyncDirRes
	(*IcefsGetAttrRes)(nil),               // 66: IcefsGetAttrRes
	(*IcefsGetLkRes)(nil),                 // 67: IcefsGetLkRes
	(*IcefsGetXattrRes)(nil),              // 68: IcefsGetXattrRes
	(*IcefsInitRes)(nil),                  // 69: IcefsInitRes
	(*IcefsIoctlRes)(nil),                 // 70: IcefsIoctlRes
	(*IcefsLinkRes)(nil),                  // 71: IcefsLinkRes
	(*IcefsListXattrRes)(nil),             // 72: IcefsListXattrRes
	(*IcefsLookUpRes)(nil),                // 73: IcefsLookUpRes
	(*IcefsLseekRes)(nil),                 // 74: IcefsLseekRes
	(*IcefsMkDirRes)(nil),                 // 75: IcefsMkDirRes
	(*IcefsMknodRes)(nil),                 // 76: IcefsMknodRes
	(*IcefsOpenRes)(nil),                  // 77: IcefsOpenRes
	(*IcefsOpenDirRes)(nil),               // 78: IcefsOpenDirRes
	(*IcefsPollRes)(nil),                  // 79: IcefsPollRes
	(*IcefsReadRes)(nil),                  // 80: IcefsReadRes
	(*IcefsReadDirRes)(nil),               // 81: IcefsReadDirRes
	(*IcefsReadDirPlusRes)(nil),           // 82: IcefsReadDirPlusRes
	(*IcefsReadLinkRes)(nil),              // 83: IcefsReadLinkRes
	(*IcefsReleaseRes)(nil),               // 84: IcefsReleaseRes
	(*IcefsReleaseDirRes)(nil),            // 85: IcefsReleaseDirRes
	(*IcefsRemoveXattrRes)(nil),           // 86: IcefsRemoveXattrRes
	(*IcefsRenameRes)(nil),                // 87: IcefsRenameRes
	(*IcefsRetrieveReplyRes)(nil),         // 88: IcefsRetrieveReplyRes
	(*IcefsRmDirRes)(nil),                 // 89: IcefsRmDirRes
	(*IcefsSetAttrRes)(nil),               // 90: IcefsSetAttrRes
	(*IcefsSetLkRes)(nil),                 // 91: IcefsSetLkRes
	(*IcefsSetXattrRes)(nil),              // 92: IcefsSetXattrRes
	(*IcefsStatFSRes)(nil),                // 93: IcefsStatFSRes
	(*IcefsSymLinkRes)(nil),               // 94: IcefsSymLinkRes
	(*IcefsUnlinkRes)(nil),                // 95: IcefsUnlinkRes
	(*IcefsWriteBufRes)(nil),              // 96: IcefsWriteBufRes
	(*IcefsWriteRes)(nil),                 // 97: IcefsWriteRes
	(*IcefsForgetMultiReqForgetData)(nil), // 98: IcefsForgetMultiReq.forget_data
	(*IcefsReadDirPlusResDataPlus)(nil),   // 99: IcefsReadDirPlusRes.data_plus
	(*FuseIoctlOut)(nil),                  // 100: FuseIoctlOut
}
var file_icefs_proto_depIdxs = []int32{
	0,   // 0: FuseReq.ctx:type_name -> FuseCtx
	4,   // 1: statStruct.st_atim:type_name -> timeStruct
	4,   // 2: statStruct.st_mtim:type_name -> timeStruct
	4,   // 3: statStruct.st_ctim:type_name -> timeStruct
	5,   // 4: FuseEntryParam.attr:type_name -> statStruct
	1,   // 5: IcefsAccessReq.req:type_name -> FuseReq
	1,   // 6: IcefsBmapReq.req:type_name -> FuseReq
	1,   // 7: IcefsCopyFileRangeReq.req:type_name -> FuseReq
	2,   // 8: IcefsCopyFileRangeReq.file_info_in:type_name -> FuseFileInfo
	2,   // 9: IcefsCopyFileRangeReq.file_info_out:type_name -> FuseFileInfo
	1,   // 10: IcefsCreateReq.req:type_name -> FuseReq
	2,   // 11: IcefsCreateReq.file_info:type_name -> FuseFileInfo
	1,   // 12: IcefsFallocateReq.req:type_name -> FuseReq
	2,   // 13: IcefsFallocateReq.file_info:type_name -> FuseFileInfo
	1,   // 14: IcefsFlockReq.req:type_name -> FuseReq
	2,   // 15: IcefsFlockReq.file_info:type_name -> FuseFileInfo
	1,   // 16: IcefsFlushReq.req:type_name -> FuseReq
	2,   // 17: IcefsFlushReq.file_info:type_name -> FuseFileInfo
	1,   // 18: IcefsForgetMultiReq.req:type_name -> FuseReq
	98,  // 19: IcefsForgetMultiReq.to_forget:type_name -> IcefsForgetMultiReq.forget_data
	1,   // 20: IcefsForgetReq.req:type_name -> FuseReq
	1,   // 21: IcefsFsyncReq.req:type_name -> FuseReq
	2,   // 22: IcefsFsyncReq.file_info:type_name -> FuseFileInfo
	1,   // 23: IcefsFsyncDirReq.req:type_name -> FuseReq
	2,   // 24: IcefsFsyncDirReq.file_info:type_name -> FuseFileInfo
	1,   // 25: IcefsGetAttrReq.req:type_name -> FuseReq
	2,   // 26: IcefsGetAttrReq.file_info:type_name -> FuseFileInfo
	1,   // 27: IcefsGetLkReq.req:type_name -> FuseReq
	2,   // 28: IcefsGetLkReq.file_info:type_name -> FuseFileInfo
	3,   // 29: IcefsGetLkReq.lock:type_name -> flockStruct
	1,   // 30: IcefsGetXattrReq.req:type_name -> FuseReq
	1,   // 31: IcefsIoctlReq.req:type_name -> FuseReq
	2,   // 32: IcefsIoctlReq.file_info:type_name -> FuseFileInfo
	1,   // 33: IcefsLinkReq.req:type_name -> FuseReq
	1,   // 34: IcefsListXattrReq.req:type_name -> FuseReq
	1,   // 35: IcefsLookUpReq.req:type_name -> FuseReq
	1,   // 36: IcefsLseekReq.req:type_name -> FuseReq
	2,   // 37: IcefsLseekReq.file_info:type_name -> FuseFileInfo
	1,   // 38: IcefsMkDirReq.req:type_name -> FuseReq
	1,   // 39: IcefsMknodReq.req:type_name -> FuseReq
	1,   // 40: IcefsOpenReq.req:type_name -> FuseReq
	2,   // 41: IcefsOpenReq.file_info:type_name -> FuseFileInfo
	1,   // 42: IcefsOpenDirReq.req:type_name -> FuseReq
	2,   // 43: IcefsOpenDirReq.file_info:type_name -> FuseFileInfo
	1,   // 44: IcefsPollReq.req:type_name -> FuseReq
	2,   // 45: IcefsPollReq.file_info:type_name -> FuseFileInfo
	1,   // 46: IcefsReadReq.req:type_name -> FuseReq
	2,   // 47: IcefsReadReq.file_info:type_name -> FuseFileInfo
	1,   // 48: IcefsReadDirReq.req:type_name -> FuseReq
	2,   // 49: IcefsReadDirReq.file_info:type_name -> FuseFileInfo
	1,   // 50: IcefsReadDirPlusReq.req:type_name -> FuseReq
	2,   // 51: IcefsReadDirPlusReq.file_info:type_name -> FuseFileInfo
	1,   // 52: IcefsReadLinkReq.req:type_name -> FuseReq
	1,   // 53: IcefsReleaseReq.req:type_name -> FuseReq
	2,   // 54: IcefsReleaseReq.file_info:type_name -> FuseFileInfo
	1,   // 55: IcefsReleaseDirReq.req:type_name -> FuseReq
	2,   // 56: IcefsReleaseDirReq.file_info:type_name -> FuseFileInfo
	1,   // 57: IcefsRemoveXattrReq.req:type_name -> FuseReq
	1,   // 58: IcefsRenameReq.req:type_name -> FuseReq
	1,   // 59: IcefsRetrieveReplyReq.req:type_name -> FuseReq
	9,   // 60: IcefsRetrieveReplyReq.data:type_name -> ioVector
	1,   // 61: IcefsRmDirReq.req:type_name -> FuseReq
	1,   // 62: IcefsSetAttrReq.req:type_name -> FuseReq
	5,   // 63: IcefsSetAttrReq.stat:type_name -> statStruct
	2,   // 64: IcefsSetAttrReq.file_info:type_name -> FuseFileInfo
	1,   // 65: IcefsSetLkReq.req:type_name -> FuseReq
	2,   // 66: IcefsSetLkReq.file_info:type_name -> FuseFileInfo
	3,   // 67: IcefsSetLkReq.lock:type_name -> flockStruct
	1,   // 68: IcefsSetXattrReq.req:type_name -> FuseReq
	1,   // 69: IcefsStatFSReq.req:type_name -> FuseReq
	1,   // 70: IcefsSymLinkReq.req:type_name -> FuseReq
	1,   // 71: IcefsUnlinkReq.req:type_name -> FuseReq
	1,   // 72: IcefsWriteBufReq.req:type_name -> FuseReq
	9,   // 73: IcefsWriteBufReq.buf:type_name -> ioVector
	2,   // 74: IcefsWriteBufReq.file_info:type_name -> FuseFileInfo
	1,   // 75: IcefsWriteReq.req:type_name -> FuseReq
	2,   // 76: IcefsWriteReq.file_info:type_name -> FuseFileInfo
	6,   // 77: IcefsCreateRes.entry:type_name -> FuseEntryParam
	5,   // 78: IcefsGetAttrRes.stat:type_name -> statStruct
	100, // 79: IcefsIoctlRes.out:type_name -> FuseIoctlOut
	9,   // 80: IcefsIoctlRes.data:type_name -> ioVector
	6,   // 81: IcefsLinkRes.entry:type_name -> FuseEntryParam
	6,   // 82: IcefsLookUpRes.entry:type_name -> FuseEntryParam
	6,   // 83: IcefsMkDirRes.entry:type_name -> FuseEntryParam
	6,   // 84: IcefsMknodRes.entry:type_name -> FuseEntryParam
	7,   // 85: IcefsReadDirRes.data:type_name -> DirentStruct
	99,  // 86: IcefsReadDirPlusRes.data:type_name -> IcefsReadDirPlusRes.data_plus
	5,   // 87: IcefsSetAttrRes.stat:type_name -> statStruct
	8,   // 88: IcefsStatFSRes.statvfs:type_name -> statvfsStruct
	6,   // 89: IcefsSymLinkRes.entry:type_name -> FuseEntryParam
	6,   // 90: IcefsReadDirPlusRes.data_plus.entry:type_name -> FuseEntryParam
	7,   // 91: IcefsReadDirPlusRes.data_plus.dir_entry:type_name -> DirentStruct
	92,  // [92:92] is the sub-list for method output_type
	92,  // [92:92] is the sub-list for method input_type
	92,  // [92:92] is the sub-list for extension type_name
	92,  // [92:92] is the sub-list for extension extendee
	0,   // [0:92] is the sub-list for field type_name
}

func init() { file_icefs_proto_init() }
func file_icefs_proto_init() {
	if File_icefs_proto != nil {
		return
	}
	file_fuseKernel_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_icefs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuseCtx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuseFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlockStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuseEntryParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirentStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatvfsStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IoVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsAccessReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsBmapReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsCopyFileRangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsDestroyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsFallocateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsFlockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsFlushReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsForgetMultiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsForgetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsFsyncReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsFsyncDirReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsGetAttrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsGetLkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsGetXattrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsInitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsIoctlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsLinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsListXattrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsLookUpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsLseekReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsMkDirReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsMknodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsOpenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsOpenDirReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsPollReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsReadDirReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsReadDirPlusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsReadLinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsReleaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsReleaseDirReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsRemoveXattrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsRenameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsRetrieveReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsRmDirReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsSetAttrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsSetLkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsSetXattrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsStatFSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsSymLinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsUnlinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsWriteBufReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsWriteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsAccessRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsBmapRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsCopyFileRangeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsCreateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsDestroyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsFallocateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsFlockRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsFlushRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsForgetMultiRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsForgetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsFsyncRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsFsyncDirRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsGetAttrRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsGetLkRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsGetXattrRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsInitRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsIoctlRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsLinkRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsListXattrRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsLookUpRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsLseekRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsMkDirRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsMknodRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsOpenRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsOpenDirRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsPollRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsReadRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsReadDirRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsReadDirPlusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsReadLinkRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsReleaseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsReleaseDirRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsRemoveXattrRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsRenameRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsRetrieveReplyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsRmDirRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsSetAttrRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsSetLkRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsSetXattrRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsStatFSRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsSymLinkRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsUnlinkRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsWriteBufRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsWriteRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsForgetMultiReqForgetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_icefs_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcefsReadDirPlusResDataPlus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_icefs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   100,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_icefs_proto_goTypes,
		DependencyIndexes: file_icefs_proto_depIdxs,
		MessageInfos:      file_icefs_proto_msgTypes,
	}.Build()
	File_icefs_proto = out.File
	file_icefs_proto_rawDesc = nil
	file_icefs_proto_goTypes = nil
	file_icefs_proto_depIdxs = nil
}
